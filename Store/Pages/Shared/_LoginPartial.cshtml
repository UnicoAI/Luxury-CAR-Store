@using Microsoft.AspNetCore.Identity
@using Store.Areas.Identity
@inject SignInManager<IdentityUser> SignInManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="align-items-center d-flex nav-item">
            @if (User.IsInRole(Roles.Admin))
            {
                <div class="dropdown">
                    <button aria-expanded="false" aria-haspopup="true" class="btn btn-outline-dark dropdown-navbar dropdown-toggle" data-bs-toggle="dropdown" id="dropdownMenuButton" type="button">
                        @User.Identity?.Name
                    </button>
                    <div aria-labelledby="dropdownMenuButton" class="dropdown-menu">
                        <a asp-area="Identity" asp-page="/Account/Manage/Index" class="dropdown-item">Profile</a>
                        <a asp-area="Admin" asp-page="/Index" class="dropdown-item">Admin Panel</a>
                    </div>
                </div>
            }
            else
            {
                <a asp-area="Identity" asp-page="/Account/Manage/Index" class="nav-link text-dark" title="Manage">@User.Identity?.Name</a>
            }
        </li>
        <li class="nav-item">
            <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" class="form-inline" method="post">
                <button class="btn btn-link nav-link text-dark" type="submit">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a asp-area="Identity" asp-page="/Account/Register" class="nav-link text-dark">Register</a>
        </li>
        <li class="nav-item">
            <a asp-area="Identity" asp-page="/Account/Login" class="nav-link text-dark">Login</a>
        </li>
    }
</ul>
